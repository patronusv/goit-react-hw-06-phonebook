{"version":3,"sources":["components/AppStyled.js","redux/actions/phonebookActions.js","components/contactForm/ContactFormStyled.js","components/alert/AlertStyled.js","components/alert/Alert.js","components/contactForm/ContactForm.js","components/contactList/contactListItem/ContactListItemStyled.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactListStyled.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","components/App.js","redux/reducers/phonebookReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["AppWrapper","styled","div","addNewContact","createAction","deleteContact","setFilter","getInitialContacts","FormWrapper","AlertBox","Alert","message","className","initialState","name","number","connect","state","contacts","phonebook","dispatch","camp","useState","setState","alertMessage","setAlertMessage","showAlert","setShowAlert","handleInputChange","e","target","value","prevState","showAlertMessage","setTimeout","CSSTransition","in","timeout","classNames","unmountOnExit","onSubmit","preventDefault","user","id","uuidv4","some","element","length","type","onChange","ContactLi","li","filter","item","toLowerCase","includes","classname","onClick","dataset","data-id","ContactListWrapper","data","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","TransitionGroup","component","map","ContactListItem","propTypes","PropTypes","array","string","FilterWrapper","appear","phonebookReducer","createReducer","action","payload","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45578d10.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nconst AppWrapper = styled.div`\r\n  padding: 20px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border: 1px solid navy;\r\n  border-radius: 10px;\r\n  width: 500px;\r\n  margin: 0 auto;\r\n  background-color: #efefef;\r\n  box-shadow: 7px 5px 7px 5px rgba(140, 140, 140, 0.75);\r\n  .page-title {\r\n    margin-bottom: 20px;\r\n  }\r\n  .contacts-title {\r\n    margin-bottom: 10px;\r\n    position: relative;\r\n    z-index: 1;\r\n\r\n    overflow: hidden;\r\n  }\r\n  .my-title-appear {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n\r\n  .my-title-appear-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 500ms;\r\n  }\r\n  .my-title-exit {\r\n    opacity: 1;\r\n  }\r\n  .my-title-exit-active {\r\n    opacity: 0;\r\n    transition: opacity 500ms;\r\n  }\r\n  .my-filter-enter {\r\n    opacity: 0;\r\n    transform: translateY(-50%);\r\n  }\r\n\r\n  .my-filter-enter-active {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n    transition: all 250ms;\r\n  }\r\n  .my-filter-exit {\r\n    opacity: 1;\r\n  }\r\n  .my-filter-exit-active {\r\n    opacity: 0;\r\n    transition: opacity 250ms;\r\n  }\r\n  .my-alert-enter {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n  }\r\n\r\n  .my-alert-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 250ms;\r\n  }\r\n  .my-alert-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  .my-alert-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n    transition: all 250ms;\r\n  }\r\n`;\r\nexport default AppWrapper;\r\n","// import { ADD_CONTACT, DELETE_CONTACT, GET_INITIAL_CONTACTS, SET_FILTER } from '../constants/phonebookConstants';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addNewContact = createAction('phonebook/addNewContact');\r\nexport const deleteContact = createAction('phonebook/deleteContact');\r\nexport const setFilter = createAction('phonebook/setFilter');\r\nexport const getInitialContacts = createAction('phonebook/getInitialContacts');\r\n\r\n// export const addNewContact = data => {\r\n//   return {\r\n//     type: ADD_CONTACT,\r\n//     payload: data,\r\n//   };\r\n// };\r\n// export const deleteContact = id => {\r\n//   return {\r\n//     type: DELETE_CONTACT,\r\n//     payload: id,\r\n//   };\r\n// };\r\n// export const setFilter = value => {\r\n//   return {\r\n//     type: SET_FILTER,\r\n//     payload: value,\r\n//   };\r\n// };\r\n// export const getInitialContacts = data => {\r\n//   return {\r\n//     type: GET_INITIAL_CONTACTS,\r\n//     payload: data,\r\n//   };\r\n// };\r\n","import styled from 'styled-components';\r\nconst FormWrapper = styled.div`\r\n  padding: 20px 0;\r\n  width: 100%;\r\n\r\n  /* margin: 0 auto; */\r\n  background-color: #efefef;\r\n  .form-label {\r\n    font-weight: 700;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n  .form-input {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n  .form-button {\r\n    padding: 5px 15px;\r\n    border: 1px solid navy;\r\n    border-radius: 5px;\r\n    background-color: lightblue;\r\n    box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  }\r\n  .form-button:hover,\r\n  .form-button:focus {\r\n    background-color: yellowgreen;\r\n  }\r\n`;\r\nexport default FormWrapper;\r\n","import styled from 'styled-components';\r\nconst AlertBox = styled.div`\r\n  padding: 15px;\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 40px;\r\n  background-color: tomato;\r\n  max-width: 450px;\r\n\r\n  border-radius: 5px;\r\n  .alertText {\r\n    font-size: 20px;\r\n  }\r\n`;\r\nexport default AlertBox;\r\n","import PropTypes from 'prop-types';\r\nimport AlertBox from './AlertStyled';\r\nconst Alert = ({ message }) => {\r\n  return (\r\n    <AlertBox>\r\n      <p className=\"alertText\">{message}</p>\r\n    </AlertBox>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n\r\nAlert.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport { addNewContact } from '../../redux/actions/phonebookActions';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport FormWrapper from './ContactFormStyled';\r\nimport Alert from '../alert/Alert';\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\nconst ContactForm = ({ addNewContact, contacts }) => {\r\n  const [state, setState] = useState({ ...initialState });\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    setState(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const user = { id: uuidv4(), name: state.name, number: state.number };\r\n    if (contacts.some(element => element.name === user.name)) {\r\n      showAlertMessage(`${user.name} is already in contacts`);\r\n      return;\r\n    }\r\n    if (!user.name.length) {\r\n      showAlertMessage('Please enter a name');\r\n      return;\r\n    }\r\n    if (!user.number.length) {\r\n      showAlertMessage('Please enter a number');\r\n      return;\r\n    }\r\n    addNewContact(user);\r\n    setState({ ...initialState });\r\n  };\r\n  const showAlertMessage = message => {\r\n    setAlertMessage(message);\r\n    setShowAlert(true);\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n    setTimeout(() => {\r\n      setAlertMessage('');\r\n    }, 3250);\r\n  };\r\n  const { name, number } = state;\r\n  return (\r\n    <FormWrapper>\r\n      <CSSTransition in={showAlert} timeout={250} classNames=\"my-alert\" unmountOnExit>\r\n        <Alert message={alertMessage} />\r\n      </CSSTransition>\r\n      <form onSubmit={handleSubmit}>\r\n        <label className=\"form-label\">\r\n          Name\r\n          <input className=\"form-input\" type=\"text\" name=\"name\" value={name} onChange={handleInputChange} />\r\n        </label>\r\n        <label className=\"form-label\">\r\n          Number\r\n          <input className=\"form-input\" type=\"text\" name=\"number\" value={number} onChange={handleInputChange} />\r\n        </label>\r\n        <button className=\"form-button\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.phonebook.contacts,\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addNewContact: camp => {\r\n      dispatch(addNewContact(camp));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  addNewContact: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\nconst ContactLi = styled.li`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 5px 15px;\r\n  border: 1px solid navy;\r\n  border-radius: 5px;\r\n  box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  .contact-list-name {\r\n    font-weight: 700;\r\n    margin-right: 5px;\r\n  }\r\n  .contact-list-number {\r\n    margin-right: 10px;\r\n  }\r\n  .contact-list-button {\r\n    padding: 5px 15px;\r\n    border: 1px solid navy;\r\n    border-radius: 5px;\r\n    background-color: lightblue;\r\n    box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  }\r\n  .contact-list-button:hover,\r\n  .contact-list-button:focus {\r\n    background-color: yellowgreen;\r\n  }\r\n`;\r\nexport default ContactLi;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteContact, setFilter } from '../../../redux/actions/phonebookActions';\r\nimport ContactLi from './ContactListItemStyled';\r\nconst ContactListItem = ({ item, contacts, filter, deleteContact, setFilter }) => {\r\n  const onHandleDelete = e => {\r\n    const id = e.target.dataset.id;\r\n    deleteContact(id);\r\n\r\n    if (contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase())).length < 2) {\r\n      setFilter('');\r\n    }\r\n  };\r\n  return (\r\n    <ContactLi classname=\"contact-list-item\" key={item.id}>\r\n      <span className=\"contact-list-name\">{item.name}: </span>\r\n      <span className=\"contact-list-number\">{item.number}</span>\r\n      <button className=\"contact-list-button\" type=\"button\" onClick={onHandleDelete} data-id={item.id}>\r\n        Delete contact\r\n      </button>\r\n    </ContactLi>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.phonebook.contacts.filter(item => item.name.toLowerCase().includes(state.phonebook.filter.toLowerCase())),\r\n\r\n    filter: state.phonebook.filter,\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteContact: id => {\r\n      dispatch(deleteContact(id));\r\n    },\r\n    setFilter: value => {\r\n      dispatch(setFilter(value));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\nContactListItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\nconst ContactListWrapper = styled.div`\r\n  padding: 10px 0;\r\n  li:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  .my-list-item-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n\r\n  .my-list-item-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 250ms;\r\n  }\r\n  .my-list-item-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  .my-list-item-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n    transition: all 250ms;\r\n  }\r\n`;\r\nexport default ContactListWrapper;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ContactListItem from './contactListItem/ContactListItem';\r\nimport ContactListWrapper from './ContactListStyled';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { deleteContact, getInitialContacts } from '../../redux/actions/phonebookActions';\r\n\r\nconst ContactList = ({ contacts, filter, getInitialContacts }) => {\r\n  useEffect(() => {\r\n    const contacts = localStorage.getItem('contacts');\r\n    if (contacts) {\r\n      getInitialContacts(JSON.parse(contacts));\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n  return (\r\n    <ContactListWrapper>\r\n      <TransitionGroup component=\"ul\" className=\"list\">\r\n        {contacts\r\n          .filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\r\n          .map(item => (\r\n            <CSSTransition key={item.id} timeout={250} classNames=\"my-list-item\">\r\n              <ContactListItem item={item} />\r\n            </CSSTransition>\r\n          ))}\r\n      </TransitionGroup>\r\n    </ContactListWrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.phonebook.contacts.filter(item => item.name.toLowerCase().includes(state.phonebook.filter.toLowerCase())),\r\n    filter: state.phonebook.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteContact: id => {\r\n      dispatch(deleteContact(id));\r\n    },\r\n    getInitialContacts: data => {\r\n      dispatch(getInitialContacts(data));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.string,\r\n};\r\n","import styled from 'styled-components';\r\nconst FilterWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 20px 0;\r\n  .filter-label {\r\n    font-weight: 700;\r\n    display: block;\r\n  }\r\n  .filter-input {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n`;\r\nexport default FilterWrapper;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { setFilter } from '../../redux/actions/phonebookActions';\r\nimport FilterWrapper from './FilterStyled';\r\nconst Filter = ({ setFilter, filter }) => {\r\n  const onHandleChange = e => {\r\n    const { value } = e.target;\r\n    setFilter(value);\r\n  };\r\n  return (\r\n    <FilterWrapper>\r\n      <label className=\"filter-label\">\r\n        Search by name\r\n        <input className=\"filter-input\" type=\"text\" name=\"filter\" value={filter} onChange={onHandleChange} />\r\n      </label>\r\n    </FilterWrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: state.phonebook.filter,\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setFilter: value => {\r\n      dispatch(setFilter(value));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\nFilter.propTypes = {\r\n  setFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.string,\r\n};\r\n","import React from 'react';\nimport AppWrapper from './AppStyled';\nimport { CSSTransition } from 'react-transition-group';\n\nimport ContactForm from './contactForm/ContactForm';\nimport ContactList from './contactList/ContactList';\nimport Filter from './filter/Filter';\nimport { connect } from 'react-redux';\n\nconst App = ({ contacts }) => {\n  return (\n    <AppWrapper>\n      <CSSTransition in={true} appear={true} timeout={500} classNames=\"my-title\" unmountOnExit>\n        <h1 className=\"page-title\">Phonebook</h1>\n      </CSSTransition>\n\n      <ContactForm />\n\n      <h2 className=\"contacts-title\">Contacts</h2>\n      <CSSTransition in={contacts.length > 1} timeout={250} classNames=\"my-filter\" unmountOnExit>\n        <Filter />\n      </CSSTransition>\n\n      <ContactList />\n    </AppWrapper>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    contacts: state.phonebook.contacts,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { addNewContact, deleteContact, getInitialContacts, setFilter } from '../actions/phonebookActions';\r\n// import { ADD_CONTACT, DELETE_CONTACT, SET_FILTER, GET_INITIAL_CONTACTS } from '../constants/phonebookConstants';\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  filter: '',\r\n};\r\n\r\nconst onAddContact = (state, action) => ({\r\n  ...state,\r\n  contacts: [...state.contacts, action.payload],\r\n});\r\nconst onDeleteContact = (state, action) => ({\r\n  ...state,\r\n  contacts: [...state.contacts.filter(item => item.id !== action.payload)],\r\n});\r\nconst onSetFilter = (state, action) => ({\r\n  ...state,\r\n  filter: action.payload,\r\n});\r\nconst onGetInitialContacts = (state, action) => ({\r\n  ...state,\r\n  contacts: [...action.payload],\r\n});\r\n\r\nconst phonebookReducer = createReducer(\r\n  { ...initialState },\r\n  {\r\n    [addNewContact]: onAddContact,\r\n    [deleteContact]: onDeleteContact,\r\n    [setFilter]: onSetFilter,\r\n    [getInitialContacts]: onGetInitialContacts,\r\n  },\r\n);\r\nexport default phonebookReducer;\r\n\r\n// const phonebookReducer = (state = { ...initialState }, action) => {\r\n//   switch (action.type) {\r\n//     case ADD_CONTACT:\r\n//       return {\r\n//         ...state,\r\n//         contacts: [...state.contacts, action.payload],\r\n//       };\r\n//     case DELETE_CONTACT:\r\n//       return {\r\n//         ...state,\r\n//         contacts: [...state.contacts.filter(item => item.id !== action.payload)],\r\n//       };\r\n//     case SET_FILTER:\r\n//       return {\r\n//         ...state,\r\n//         filter: action.payload,\r\n//       };\r\n//     case GET_INITIAL_CONTACTS:\r\n//       return {\r\n//         ...state,\r\n//         contacts: [...action.payload],\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// export default phonebookReducer;\r\n","import { combineReducers } from 'redux';\r\nimport phonebookReducer from './phonebookReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  phonebook: phonebookReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","// import { createStore } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}